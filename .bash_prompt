#!/usr/bin/env bash
### include user/hostname in title
export LSCOLORS=GxexfxdxCxehchcdcegcgd
export LS_COLORS="di=01;96"

##
## for xterm/iterm

export PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD}\007"'
export PS1="[\e[1;33m\u\h \e[1;31m\w>\e[m]# "


_pl_cc () { echo -ne "\\[\e[38;5;$1;48;5;$2m\\]"; }

##
### colors are nice
## see http://chickenriceplatter.github.io/blog/2013/03/07/customize-your-bash-prompt/
#
#
#
#


### color 0
# USER
CUF=227;  CUB=130;

# HOST ( PROD/TEST/DEV/LAPTOP/OTHER)
CHFP=225; CHBP=1;
CHFT=149; CHBT=22;
CHFD=225; CHBD=127;
CHFL=15;  CHBL=240;
CHFX=0;   CHBX=3;

# DIR
CDF=87;   CDB=19;

# ATTRIBUTES ( VIRTUAL_ENV )
CAF=208;  CAB=234;

# SHELL PROMPT
CSF=10;   CSB=22;
CSFX=219; CSBX=88;

CV0F=201; CV0B=54;    #VCS


## DARKER / MUTED COLORS


CWARNF=228; CWARNB=100;   #WARN
CCRITF=219; CCRITB=88;    #CRIT

CUF=208;  CUB=237;    #USER

CHFP=220; CHBP=124;   #HOST/PROD
CHFT=27;  CHBT=238;   #HOST/TEST
CHFD=34;  CHBD=238;   #HOST/DEV
CHFL=255; CHBL=238;   #HOST/LOCAL
CHFX=225; CHBX=238;   #HOST/OTHER

CDF=14;   CDB=239;    #DIR

CAF=220;  CAB=240;    #ATTIRBUTES

CSF=34;   CSB=241;    #SHELL RESULT GOOD
CSFX=$CCRITF; CSBX=$CCRITB;    #SHELL RESULT BAD

CV0F=213; CV0B=54;    #VCS




C0="\\[\e[0m\\]"

ARR=$(echo -ne '\xE2\xAE\x80')

HOST_ENV=$(hostname | cut -d . -f 3)
case $HOST_ENV in
  dev ) CHF=$CHFD; CHB=$CHBD;;
  test* ) CHF=$CHFT; CHB=$CHBT;;
  prod ) CHF=$CHFP; CHB=$CHBP;;
  * ) CHF=$CHFX; CHB=$CHBX;;
esac
if [ "$(uname)" == "Darwin" ]; then
        CHF=$CHFL; CHB=$CHBL;
fi



_pl_add() { 
        local FG=$1; local BG=$2; local TXT=$3
        if [ ! -z $_PL_B ]; then
                _PL_PS1="${_PL_PS1}$(_pl_cc $_PL_B $BG)${ARR}"
        fi
        _PL_PS1="${_PL_PS1}$(_pl_cc $FG $BG)${TXT}"
        _PL_F=$FG
        _PL_B=$BG
}
_pl_nl() {
        local FG=0
        local BG=0
        if [ ! -z $_PL_B ]; then
                _PL_PS1="${_PL_PS1}$(_pl_cc $_PL_B $BG)${ARR}"
        fi
        _PL_PS1="$_PL_PS1\n"
        _PL_F=
        _PL_B=
}
_pl_end() {  
        local BG=0
        if [ ! -z $_PL_B ]; then
                _PL_PS1="${_PL_PS1}$(_pl_cc $_PL_B $BG)${ARR}"
        fi
        _PL_PS1="$_PL_PS1$C0"
}

_pl_prompt() {
        RETVAL=$?

        _PL_F=
        _PL_B=
        _PL_PS1=

        ## if xterm-256color
        PL_XTERM="\\[$(echo -ne '\033]0;${USER}@${HOSTNAME}: ${PWD}\007')\\]"
        ##_PL_PS1=$PL_XTERM

        _pl_add $CUF $CUB " \u "

	if [[ -f ~/.machtoken ]]; then
        _pl_add $CHF $CHB " $(<~/.machtoken) \H $(<~/.machtoken)"
	else
        _pl_add $CHF $CHB " \H "
	fi


        _pl_add $CDF $CDB " \w "

        DISKUSE=$(df -h $PWD -l -P | sed -ne 's/.* \([0-9][0-9]*\)%.*/\1/p')
        if [ $DISKUSE -gt 95 ]; then
        _pl_add $CCRITF $CCRITB " disk@${DISKUSE}% "
        elif [ $DISKUSE -gt 80 ]; then
        _pl_add $CWARNF $CWARNB " disk@${DISKUSE}% "
        fi


        ## too verbose, clean it up
        if [[ -d .svn ]]; then
                #set -x
                local  _SVN=$(svn info 2>/dev/null | grep 'URL:')
                local  _SVNP=
                SVN_BASE1="URL: https://svn.adnxs.net/repos/"
                SVN_BASE2="URL: https://svn.adnxs.net/"
                _SVN=${_SVN#$SVN_BASE1}
                _SVN=${_SVN#$SVN_BASE2}
                _SVN=${_SVN#*/}
                ## if branch and branch name in directory, just show icon
                if [[ "$_SVN" == branches/* ]]; then
                        _SVN=${_SVN#*/}
                        _SVN=${_SVN%%/*}
                        _SVNP="⭠ "
                        ## does it end in 
                        _SVNX=${_SVN%.*}
                        if [[ "$PWD" == *"$_SVN"* ]]; then
                        _SVN=
                        elif [[ "$PWD" == *"$_SVNX"* ]]; then
                        _SVN=${_SVN#*.}
                        fi
                ## todo - if tag and tag name in directory, just show icon
                elif [[ "$_SVN" == tags/* ]]; then ## 
                        _SVN=${_SVN#*/}
                        _SVNP="⚑ "
                        if [[ "$PWD" == *"$_SVN"* ]]; then # UNTESTED
                        _SVN=${_SVN#*.}
                        fi
                fi
                #set +x

                _pl_add $CV0F $CV0B " ${_SVNP}${_SVN} "
        elif [[ -d .git || -d ../.git || -d ../../.git ]]; then
                local _VCS=$(git status -sb --ignore-submodules | head -1 | cut -f2- -d' '  )
                _pl_add $CV0F $CV0B " ${_VCS} "
        fi


        if [ ! -z $VIRTUAL_ENV ]; then
        _pl_add $CAF $CAB " $(basename $VIRTUAL_ENV) "
        fi

        

        _pl_nl
        
        if [ $RETVAL -eq 0 ]; then
        _pl_add $CSF $CSB "$ "
        else
        _pl_add $CSFX $CSBX "$ "
        fi

        _pl_end

        export PS1="$_PL_PS1"

        # ugly patch
        export SUDO_PS1="${PS1// \\u /$(_pl_cc $CCRITF $CUB) \u}"

        [ -z "$TMUX" ] || tmux setenv TMUX_PWD_$(tmux display -p "#D" | tr -d %) "$PWD"
}

export CLICOLOR=1
export GREP_OPTIONS="--color=auto"

export PROMPT_COMMAND=_pl_prompt
